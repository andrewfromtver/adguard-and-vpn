version: "3.9"

networks:
  vpn-app:
    driver: bridge
    ipam:
     config:
      - subnet: ${LOCAL_SUBNET}
        gateway: ${LOCAL_GATEWAY}

services:
  # NGINX web server
  private-vpn-nginx:
    image: nginx
    container_name: private-vpn-nginx
    dns:
      - ${ADGUARD_DNS_IP}
    depends_on:
      open-vpn-node-1:
        condition: service_healthy
      adguard-home:
        condition: service_healthy
      node-exporter:
        condition: service_healthy
      prometheus:
        condition: service_healthy
      grafana-local-server:
        condition: service_healthy
    volumes:
      - ./.app_data/custompasswd:/etc/nginx/custompasswd
      - ./nginx/src:/usr/share/nginx/html/get-vpn
      - ./nginx/conf:/etc/nginx/conf.d
      - ./nginx/templates:/etc/nginx/templates
      - ./.app_data/nginx_log:/var/log/nginx
      - ./.app_data/vpn:/usr/share/nginx/html/vpn
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:3000:3000"
    networks:
      vpn-app:
        ipv4_address: ${LOCAL_NGINX_IP}
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: 0.05G

  # VPN server
  open-vpn-node-1:
    build:
      context: ./
      dockerfile: ./openvpn/Dockerfile
    container_name: open-vpn-node-1
    privileged: true
    dns:
      - ${ADGUARD_DNS_IP}
    environment:
      HOST_ADDR: ${GLOBAL_VPN_ADDRESS}
      HOST_TUN_PORT: ${GLOBAL_VPN_PORT}
    ports:
      - "0.0.0.0:${GLOBAL_VPN_PORT}:1194/udp"
    networks:
      vpn-app:
        ipv4_address: ${LOCAL_VPN_IP}
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: 0.05G
    healthcheck:
      test: netstat -an | grep 1194 > /dev/null; if [ 0 != $? ]; then exit 1; fi;
      interval: 10s
      timeout: 5s
      retries: 5

  # AdGuard
  adguard-home:
    image: adguard/adguardhome
    container_name: adguard-home
    volumes:
      - ./.app_data/adguard/work:/opt/adguardhome/work
      - ./.app_data/adguard/conf:/opt/adguardhome/conf
    networks:
      vpn-app:
        ipv4_address: ${ADGUARD_DNS_IP}
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 0.25G
    healthcheck:
      test: wget --quiet --tries=1 --spider http://adguard-home || exit
      interval: 10s
      timeout: 5s
      retries: 5

  # Monitoring
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    dns:
      - ${ADGUARD_DNS_IP}
    pid: host
    command:
      - '--path.rootfs=/host'
    volumes:
      - '/:/host:ro,rslave'
    expose:
      - 9100
    network_mode: host
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: 0.75G
    healthcheck:
      test: wget --quiet --tries=1 --spider http://localhost:9100 || exit
      interval: 10s
      timeout: 5s
      retries: 5

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    dns:
      - ${ADGUARD_DNS_IP}
    volumes:
      - ./.app_data/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    expose:
      - 9090
    networks:
      vpn-app:
        ipv4_address: ${PROMETHEUS_IP}
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: 0.75G
    healthcheck:
      test: wget --quiet --tries=1 --spider http://prometheus:9090 || exit
      interval: 10s
      timeout: 5s
      retries: 5

  grafana-local-server:
    image: grafana/grafana
    container_name: grafana-local-server
    dns:
      - ${ADGUARD_DNS_IP}
    environment:
      GF_SECURITY_ADMIN_USER: ${GF_SECURITY_ADMIN_USER}
      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD}
    volumes:
      - ./.app_data/monitoring/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ./.app_data/monitoring/main-dashboard.json:/var/lib/grafana/dashboards/main-dashboard.json
      - ./.app_data/monitoring/dashboard.yaml:/etc/grafana/provisioning/dashboards/main.yaml
    networks:
      vpn-app:
        ipv4_address: ${GRAFANA_IP}
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 0.25G
    healthcheck:
      test: wget --quiet --tries=1 --spider http://grafana-local-server:3000 || exit
      interval: 10s
      timeout: 5s
      retries: 5
